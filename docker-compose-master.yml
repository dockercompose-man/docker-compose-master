------------------------------------------------------------------------------------
Vanilla-Forums
------------------------------------------------------------------------------------

clone this repo into vanilla-forums directory
https://github.com/stevenli6186/vanilla-forums-docker-container
------------------------------------------------------------------------------------
docker-compose.yml
------------------------------------------------------------------------------------
version: '3'

services:
  vanilla-forums:
    image: vanillaforums
    build:
      context:  ./src
    container_name: vanilla-forums
    restart: always
    volumes:
      - "./data:/var/www/html/upload"
    ports:
      - 80:80
    environment:
      - DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    env_file:
      - .env
  db:
    image: mysql:8
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
     - "./data:/var/lib/mysql"
------------------------------------------------------------------------------------
.env
------------------------------------------------------------------------------------
VANILLA_DB_HOST=
DB_ROOT_PASSWORD=
DB_NAME=
DB_USER=
DB_PASSWORD=

------------------------------------------------------------------------------------

------------------------------------------------------------------------------------
Adminer - https://hub.docker.com/_/adminer
------------------------------------------------------------------------------------
docker-compose.yml
------------------------------------------------------------------------------------
version: '3.1'

services:

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  db:
    image: mysql:8
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    env_file:
      - .env
    ports:
      - "3306:3306"
    volumes:
     - "./data:/var/lib/mysql"
------------------------------------------------------------------------------------
.env
------------------------------------------------------------------------------------
ADMINER_DB_HOST=
DB_ROOT_PASSWORD=
DB_NAME=
DB_USER=
DB_PASSWORD=
------------------------------------------------------------------------------------
Paperless-ngx - https://github.com/paperless-ngx/paperless-ngx
------------------------------------------------------------------------------------
docker-compose.yml
------------------------------------------------------------------------------------
# docker-compose file for running paperless from the docker container registry.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this docker-compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker-compose pull'.
# - Run 'docker-compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker-compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.4"
services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - "./redisdata:/data"

  db:
    image: docker.io/library/postgres:13
    restart: unless-stopped
    volumes:
      - "./pgdata:/var/lib/postgresql/data"
    environment:
      POSTGRES_DB=${DB_NAME}
      POSTGRES_USER=${DB_USER}
      POSTGRES_PASSWORD=${DB_PASSWORD}
      POSTGRES_ROOT_PASSWORD=${DB_ROOT_PASSWORD}

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - 8181:8000
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - "./data:/usr/src/paperless/data"
      - "./media:/usr/src/paperless/media"
      - "./export:/usr/src/paperless/export"
      - "./media/paperless/consume:/usr/src/paperless/consume"
    env_file: .env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998

  gotenberg:
    image: docker.io/gotenberg/gotenberg:7.6
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: ghcr.io/paperless-ngx/tika:latest
    restart: unless-stopped

volumes:
  data:
  media:
  pgdata:
  redisdata:
------------------------------------------------------------------------------------
.env
------------------------------------------------------------------------------------
COMPOSE_PROJECT_NAME=paperless
PAPERLESS_URL=https://paperless.yourdomain.com
PAPERLESS_ALLOWED_HOSTS=*
USERMAP_GID=1001
PAPERLESS_TIME_ZONE=America/New_York
PAPERLESS_OCR_LANGUAGE=eng
PAPERLESS_SECRET_KEY=
ALLOWED_HOSTS=
DB_ROOT_PASSWORD=
DB_DATABASE=
DB_USER=
DB_PASSWORD=
DB_ROOT_PASSWORD=
------------------------------------------------------------------------------------
